function OR_stick_spect = OR_calcspect(cryst_beta)% function for calculating series of oriented spectra% centered around nominal orientation% for 31P MAS fitting of oriented spectra%% SRK 10-02-2004%% variables: %	A_csa -- CSA tensor - passed as global from OR_init%	cryst_beta -- full list orientations needed %	thetaM -- magic angle (get from simpars)%	angls -- rotor angles used in calcualtion (from simpars)global A_csa SidebandMaxOR_simbasis; % to get A_csa, to get thetaM, angls, max_sidebandmax = SidebandMax;norient = length(cryst_beta);OR_stick_spect = zeros(norient, (2*max) + 1);amp_k = zeros(size(angls));for orient = 1:norientcryst = [0, cryst_beta(orient), 0]; % or alpha = 2*pi*rand(1)freq_MR = (A_csa * dmn(cryst)) .* dm0_red(thetaM)';phase_MRt = freq_MR(1) * (exp(i*(-2)*angls) -1)/(i*(-2)) +...	freq_MR(2) * (exp(i*(-1)*angls) -1)/(i*(-1)) +...	freq_MR(4) * (exp(i*(1)*angls) -1)/(i*(1)) +...	freq_MR(5) * (exp(i*(2)*angls) -1)/(i*(2)); %each denom. was *w_rotamp_MRk = (1/N)*fftshift(fft(exp(i*phase_MRt)));amp_MRk = (abs(amp_MRk)).^2;  % automatically takes care of gamma averageamp_k = amp_k + amp_MRk;OR_stick_spect(orient,:) = amp_MRk((N/2)-max:(N/2)+max);endclear max cryst phase_MRt amp_MRk amp_k thetaM