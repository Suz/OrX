function OR_iso_spect = OR_calciso(cryst_list);% matlab 5.0 % function for calculating stick spectrum% of unoriented fraction in nominally % oriented samples. Specific for MAS.% based on CSA_calc.m%%% variables: %	A_csa -- CSA tensor: passed as global from OR_init%	cryst_list -- full list of orientations, based on averaging scheme %	thetaM -- magic angle (get from simbasis)%	angls -- rotor angles used in calcualtion (from simpbasis)%%  SRKiihne 10-02-2004global A_csa angls SidebandMaxOR_simbasis; % to get a number of parametersmax = SidebandMax;ncryst = length(cryst_list);amp_k = zeros(size(angls));OR_iso_spect = zeros(1, (2*max)+1 );for m = 1:ncrystcryst(1) = cryst_list(m,1); cryst(2) = cryst_list(m,2);cryst_weight = cryst_list(m,3); cryst(3) = 0;freq_MR = (A_csa * dmn(cryst)) .* dm0_red(thetaM)';phase_MRt = freq_MR(1) * (exp(i*(-2)*angls) -1)/(-2*i) +...	freq_MR(2) * (exp(i*(-1)*angls) -1)/(-i) +...	freq_MR(4) * (exp(i*(1)*angls) -1)/(i) +...	freq_MR(5) * (exp(i*(2)*angls) -1)/(2*i);amp_MRk = (1/(length(angls)))*fftshift(fft(exp(i*phase_MRt)));amp_MRk = cryst_weight*(abs(amp_MRk)).^2;  % automatically takes care of gamma averageamp_k = amp_k + amp_MRk;endOR_iso_spect = amp_MRk((N/2)-max:(N/2)+max);clear max cryst phase_MRt amp_MRk amp_k thetaM