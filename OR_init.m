%OR_init.m% macro for initializing 31P oriented fitting% reads user info% loads experimental data% calculates variance% converts CSA% etc.global ExpData Expsize Variance global OR_sw OR_freq OR_wrot OR_cutglobal A_csa SidebandMax RFoffset global OR_angle OR_mosaic_spread holdAngle% get user info:OR_inputs;% load experimental data[ExpData, Expsize] = brukread_linux(nmrdatafile);ExpData = real(ExpData./norm(ExpData));VLims = [round(0.05*Expsize), round(0.2*Expsize)];Variance = (std([ExpData(VLims(1):VLims(2))]))^2;% convert some parametersOR_wrot = w_rot; OR_sw = 1/(2*dw); OR_freq = freq;SidebandMax = max_sideband; RFoffset = offset;OR_delta = (delta * 1e-6) * OR_freq/OR_wrot; % change to unitlessA_csa = DEF_csa(eta,OR_delta);OR_mosaic_spread = (pi/180)*mosaic_spread;OR_angle = (pi/180)*angle;OR_broadening = linewidth;OR_frac_isotropic = percent_isotropic;% shift data: center on peak of interest:wiso_shift = round((w_iso - RFoffset)*(OR_freq*1e-6)*Expsize/OR_sw)if wiso_shift < 0OR_cut = Expsize + wiso_shift;elseif wiso_shift > 0OR_cut = abs( wiso_shift );else % wiso_shift == 0;OR_cut = 2; % this shifts 1st point to end, preventing error.end% set fitting options fit_params = foptions;fit_params(1) = verbose;fit_params(2) = fit_tolerance;fit_params(3) = chi_tolerance;fit_params(14) = max_iterations;holdAngle = hold_orientation;